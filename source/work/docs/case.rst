Case总结
============================

.. toctree::
   :maxdepth: 2
   :caption: Contents:

Mysql连接数过高
  2017年底，各模块多次出现任务失败，追查原因方知是数据库连接数不足导致。经过讨论，解决方向有如下方面：

  - 加大MySQL配置（连接数、CPU、带宽、内存等），临时保证线上业务正常。
  - 排查程序，优化数据访问。包括：长期占用数据库连接不释放（减少msyql等待时间）、数据访问提交改为批处理、清理对无索引字段的搜索、清理其他“长查询”。
  - 尝试如下方向，彻底解决此问题：引入redis（查询缓存）、elasticsearch（缓解查询压力）、NoSQL，此外还有数据架构重组优化表结构、项目切换语言（PHP无法主动释放数据库连接）。

ES监控预警不足
  我负责的ElasticSearch模块出现过一次宕机，直接导致线上业务无法进行搜索和数据访问。宕机的原因是硬盘不足，导致服务宕机。

  - 这件事情的根本原因是我没有重视对机器资源（CPU、内存、空间）的监控预警。这件事后我重点了解了Kibana和ES API中对资源的监控和查询功能，并做了邮件通知。
  - 硬盘不足的原因可能如下：

    - 数据过多，有相当的脏数据、费数据没有惊醒清理。
    - 索引结构不合理，如：因为字段title做过多次索引所以同时存在title1、title2、title3，对于URL字符串直接进行了索引；dependence是长数据字段且不进行搜索，而这个字段没有标记为 ``not_analyzed`` 。
    - 向ES推送数据的速度太快，ES因为CPU、缓存的限制忙不过来，它会将这些数据临时保存到硬盘中，处理后在删除。如果这个状态保持的时间过长的话，也会导致硬盘满载。解决方法：Es通知客户端自己忙不过来（比如不在接收 `PUT` 请求）；控制客户端的线程、进程数据量。

ES查询速度过慢
  问题排查：

  - 查询体没有使用 ``filter`` 语法。
  - ES没有开启请求缓存。
  - 写进程占用大量资源，CPU、缓存不足的情况下，严重影响查询速度。
  - 对于复杂的 ``aggregation`` ，最后对结果直接搜索，而非线上实时计算。
  - 跨域：避免毕竟机器访问美国节点的ES服务。
  - ``QPS`` 过高。（本产品基本不存在此问题）。

ES相关性
  ES字符串搜索中，对于相关性的优化经历。

  - 对不同字段增加权重，如title的权重要比body高。
  - 不同语言使用不同的索引，如title字段做了 ``EN`` 与 ``CN`` 两种分词，如果搜索词为“三国演义”使用 ``CN`` 分词，如果是“English Word”则使用 ``EN`` 分词。
  - 不要对同一搜索词，直接进行 ``max(EN rate, CN rate)`` 操作，因为往往“不合适的分词”的打分会更高。

跨部门沟通
  今天我与产品经理做了远程通话，这是我接手ETL（抓取、拉取、ES）之后第一次与其他部门非技术人员沟通（产品经理主要负责UI展示侧的设计工作）。起初我只想对一个问题询问它的观点，但是随着聊天的进行，我发现这样的沟通应该保持下去。因为通过与他的交流，我发现产品侧最需要什么数据、最急需那些分析、未来产品的进化方向。这对我调整自己的工作侧重提供了重要的参考，避免了自己的后知后觉。

组织问题
  最近公司的数据流经历了一次彻底的重构。但是在这个过程中发现了一个严重的问题：实操前期的讨论太过拖沓，而实操中又有老问题被重新拿出来。对此我进行了反思。

  - 实操前的讨论需要有“记录员”记录整理（这个讨论会分散在相当长的时间内）。数据流的架构重组，涉及抓取、链接分析、数据处理/分析、拉取、ES、前端等各个模块，所以在前期讨论中需要各模块负责人共同参与并关注。但是除了重构工作的主导者外，其他负责人的主要工作是自己的模块，往往无法参与所有讨论，特别是与自己模块关系不大或自己工作较为忙碌的时候，因为一个细节的讨论可能需要半个小时甚至半天时间，太耗时。而因为没有每次讨论的记录，无法在空闲时间或工作结束时去浏览一天的讨论摘要，所以往往会一段时间后发现对某次讨论的疑义，然后“旧事重提”。
  - 结构重组的主导者需要是一位经验丰富、熟悉整个数据流且权威足够的人员。各模块负责人都是经验丰富的“老家伙”，如果重构的主导者不具备以上特点，将无法调和各模块间的需求冲突，最后只能由各模块负责人去争论，寻找解决方法。

