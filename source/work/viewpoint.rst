观点
==================

.. toctree::
   :maxdepth: 2

ES调试需要使用Postman
^^^^^^^^^^^^^^^^^^^^^^^^^^
搜索“https://thegadgetsnob.com”时， ``searchAllCreativesByAes`` 返回的数据与 ``searchCreativesByAes`` 不一致（前者有数据返回，后者没有）。这种情况，我需要通过Postman，找到特定的几个ID的数据，然后观察他们的有什么特点导致两个方法返回的结果不一样。比如说：channel不对、title有特点等。同时我需要快速的修改query体，以调整

- 虽然一部分内容查询mysql也能做到，但是Es操作的第一主体是ES中的文档，而不是mysql。

进取型组织架构
^^^^^^^^^^^^^^^^^^^^
以ES为例，如果这个模块只有一个人负责，且与其他模块没有依赖关系，那么就将整个模块交给他折腾。无论是ES的控制台（白名单）、结构设计还是数据导入，财物部分另议（如空间扩容等）。如果模块规模增加到多个人，开始让主要负责人出正规的“组织架构”方式，比如说权限限制、白名单等。

架构设计中是否假设
^^^^^^^^^^^^^^^^^^^^^^
今天讨论中，石头哥引入了一个观点：架构设计中，不要假设系统的各种崩溃性的瘫痪，出了这种case，就是重启系统了，不需要在代码中容错。并引用了大V `西瓜大丸子汤` 的微薄观点：“对于自己最大的浪费，就是各种准备都是基于假设以后要和平庸的人一起工作”。当时对于这个观点我有着不同的理解。

- 在架构设计中，不需要过度假设，但是对于曾经发生的case，我们应该去讨论。而石头哥在提出上面的观点的时候，正是针对我正在表述的曾经在老架构中经历的一个场景。
- 大V的观点中，主角是“自己”而不是团队，而架构的设计是针对团队的。个人工作中，基于对于团队的信任，我们不必面面具到。但是在架构设计中，我们需要考虑错误发生后的该如何做，因为去假设人的聪明才智比假设错误还不靠谱。
- 你举的大V的话语，是在说我是 `平庸的人` 吗？ —— 无论如何，我当时确实产生了这样的观点。所以换位思考，我在与他人沟通的时候，尽量不要用这样的话语。
- 曾经我在一本畅销书中看到过这样的话：除了你负责的模块，要假设其他模块是不可信任的。这样两个观点就产生冲突了，而其中的平衡点，就需要我们自己把控了。
